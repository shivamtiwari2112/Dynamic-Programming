class Solution
{
    public int lcs(String x, String y, int m, int n, int[][]t)
    {
        if(m==0 || n==0) return 0;
        if(t[m][n]!=-1) return t[m][n];
        if(x.charAt(m-1)==y.charAt(n-1))
            return t[m][n] = 1 + lcs(x,y,m-1,n-1,t);
        else
            return t[m][n] = Math.max(lcs(x,y,m-1,n,t), lcs(x,y,m,n-1,t));
    }
    public int longestPalinSubseq(String S)
    {
        //code here
        int m = S.length();
        int[][] t = new int[m+1][m+1];
        for(int i=0; i<m+1; i++)
            for(int j=0; j<m+1; j++)
                t[i][j] = -1;
        String S2 = "";
        for(int i=m-1; i>=0; i--)
        {
            S2 += S.charAt(i);
        }
        return lcs(S, S2, m, m, t);
        
    }
}
