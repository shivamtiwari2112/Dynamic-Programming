class Solution {
    public String shortestCommonSupersequence(String str1, String str2) {
        int m = str1.length();
        int n = str2.length();

        // table filling proceducre
        int[][] t = new int[m+1][n+1];
        for(int i=1; i<m+1; i++)
        for(int j=1; j<n+1; j++)
        {
            if(str1.charAt(i-1)==str2.charAt(j-1))
                t[i][j] = 1 + t[i-1][j-1];
            else
                t[i][j] = 0 + Math.max(t[i-1][j], t[i][j-1]);
        }

        int len = t[m][n];
        int index = len-1;
        String s = "";
        int i=m;
        int j=n;
        while(i>0 && j>0)
        {
            if(str1.charAt(i-1)==str2.charAt(j-1)){
                s+=str1.charAt(i-1);
                index--;
                i--;
                j--;
            }
            else if(t[i][j-1] > t[i-1][j])
            {
                    s+=str2.charAt(j-1);
                    j--;
            }
            else {
                s += str1.charAt(i-1);
                i--;
            }
        }
        while(i>0)
        {
            s += str1.charAt(i-1);
            i--;
        }
        while(j>0)
        {
            s += str2.charAt(j-1);
            j--;
        }
        String ans2=new StringBuilder(s).reverse().toString();
        return ans2;
    }
}
